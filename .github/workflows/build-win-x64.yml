name: Build for win-x64
on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    environment: PROD
    env:
      SERVER_SSL_CA: ${{ secrets.SERVER_SSL_CA }}
      SERVER_SSL_CERT: ${{ secrets.SERVER_SSL_CERT }}
      SERVER_SSL_KEY: ${{ secrets.SERVER_SSL_KEY }}

    steps:
      # Checkout the code
      - name: Checkout the code
        uses: actions/checkout@v1

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust toolchain and components
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # Generate the executable
      - name: Generate executable
        run: ./node_modules/.bin/pkg package.json -t node16-win-x64 --public-packages "*" --no-bytecode --public --compress Brotli

      # Zip the executable
      - name: Generate zip
        run: cd __build__binary__; zip ../tagocore.zip ./tagocore.exe

      # Upload the zip file as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: mqttrelay-windows-x64
          path: ../tagocore.zip
