name: Deploy to DockerHub

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - architecture: linux/arm64/v8
            os: ubuntu-latest
          - architecture: linux/amd64
            os: macOS-latest
    environment: PROD

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Docker on macOS
        if: runner.os == 'macOS'
        run: |
          brew install --cask docker
          open /Applications/Docker.app
          while ! docker system info > /dev/null 2>&1; do sleep 1; done

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

          # linux/arm64/v8,linux/amd64
      - name: Build and deploy images
        env:
          CARGO_SERVER_SSL_CA: ${{ secrets.SERVER_SSL_CA }}
          CARGO_SERVER_SSL_CERT: ${{ secrets.SERVER_SSL_CERT }}
          CARGO_SERVER_SSL_KEY: ${{ secrets.SERVER_SSL_KEY }}
        run: bash dockerhub.sh linux/${{ matrix.architecture }} ${{ github.event.inputs.version || github.event.release.tag_name }}
