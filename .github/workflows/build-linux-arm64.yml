name: Build for linux-arm64

on: workflow_dispatch

env:
  CARGO_TERM_COLOR: always
  TARGET: aarch64-unknown-linux-musl
  FILENAME: tagoio-relay-linux-arm64

jobs:
  build:
    runs-on: ubuntu-latest
    environment: PROD
    env:
      SERVER_SSL_CA: ${{ secrets.SERVER_SSL_CA }}
      SERVER_SSL_CERT: ${{ secrets.SERVER_SSL_CERT }}
      SERVER_SSL_KEY: ${{ secrets.SERVER_SSL_KEY }}

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools

      - name: Create empty .env file
        run: touch .env

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: "${{ env.TARGET }}"
          toolchain: "stable"
          args: "--locked --release"
          strip: true

      # Zip the binary
      - name: Generate tar.gz
        shell: bash
        run: |
          cd target/${{ env.TARGET }}/release
          tar czvf - tagoio-relay | gzip > ../../../${{ env.FILENAME }}.tar.gz

      # Upload the zip file as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.FILENAME }}
          path: ./${{ env.FILENAME }}.tar.gz

      # Upload the artifact to the release
      # - name: Upload to Release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ./${{ env.FILENAME }}.tar.gz
      #     asset_name: ${{ env.FILENAME }}.tar.gz
      #     asset_content_type: application/gzip
