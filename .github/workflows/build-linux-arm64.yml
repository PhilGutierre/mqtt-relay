name: Build for linux-arm64

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always
  TARGET: aarch64-unknown-linux-musl
  FILENAME: tagoio-relay-linux-arm64

jobs:
  build:
    runs-on: ubuntu-latest
    environment: PROD
    env:
      CARGO_SERVER_SSL_CA: ${{ secrets.SERVER_SSL_CA }}
      CARGO_SERVER_SSL_CERT: ${{ secrets.SERVER_SSL_CERT }}
      CARGO_SERVER_SSL_KEY: ${{ secrets.SERVER_SSL_KEY }}

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain and components
        uses: dtolnay/rust-toolchain@stable

      - name: Install cross
        run: cargo install cross

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Create empty .env file
        run: touch .env

      # Build the modules
      - name: Build Binary
        run: cross build --verbose --locked --release --target ${{ env.TARGET }}

      # Run tests
      - name: Run tests
        run: cross test --verbose --target ${{ env.TARGET }}

      # Zip the binary
      - name: Generate tar.gz
        run: |
          cd target/${{ env.TARGET }}/release
          tar cvf - tagoio-relay | gzip > ../../../${{ env.FILENAME }}.tar.gz

      # Upload the zip file as an artifact
      - name: Upload artifact
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FILENAME }}
          path: ./${{ env.FILENAME }}.tar.gz

      - name: Generate SHA-256 checksum
        if: github.event_name == 'release'
        run: |
          shasum -a 256 ${{ env.FILENAME }}.tar.gz > ${{ env.FILENAME }}.tar.gz.sha256

      # Upload the artifact to the release
      - name: Upload to Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./${{ env.FILENAME }}.tar.gz
            ./${{ env.FILENAME }}.tar.gz.sha256
